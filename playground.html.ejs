<!doctype html>
<%_ /*
    region header
    Copyright Torben Sickert (info["~at~"]torben.website) 16.12.2012

    License
    -------

    This library written by Torben Sickert stand under a creative commons
    naming 3.0 unported license.
    See https://creativecommons.org/licenses/by/3.0/deed.de
    endregion
*/ _%>
<html>
    <!--region head-->
    <head>
        <meta charset="utf-8">
        <!--Prevent browser caching-->
        <meta http-equiv="cache-control" content="no-cache">
        <meta http-equiv="expires" content="0">
        <meta http-equiv="pragma" content="no-cache">
        <title>playground</title>
        <!--region style-->
        <style>
            <%-
                require('material-design-icons/iconfont/material-icons.css')
                    .replace(
                        /(url\()(MaterialIcons-Regular\.[^.]+\))/g,
                        '$1./material-design-icons/iconfont/$2'
                    )
             %>
        </style>
        <!--endregion-->
        <!--region polyfill-->
        <script src="https://polyfill.io/v3/polyfill.js?features=Array.from%2CArray.prototype.flat%2CArray.prototype.includes%2CArray.prototype.values%2CCustomEvent%2CElement.prototype.after%2CElement.prototype.cloneNode%2Cfetch%2CObject.assign%2CObject.entries%2CObject.values%2CPromise%2CString.prototype.endsWith%2CString.prototype.includes%2CString.prototype.startsWith%2CSymbol%2Cfetch"></script>
        <script>
            /*
                Only provide the shadow dom polyfill and avoid to patch a lot
                of dom apis.
            */
            window.ShadyDOM = {noPatch: true}
        </script>
        <script src="/@webcomponents/webcomponentsjs/webcomponents-bundle.js"></script>
        <!--endregion-->
        <!--region script-->
        <script>
            window.onload = function() {
                Object.values(agileForm.webInputMaterial.components).map(
                    function(component) {
                        component.register()
                    }
                )

                setTimeout(() =>
                    agileForm.index.api.register()
                )
            }
        </script>
        <!--endregion-->
    </head>
    <!--endregion-->
    <body>
        <agile-form
            base-configuration="{
                debug: true,
                model: {
                    type: {
                        default: 'A',
                        nullable: false,
                        selection: ['A', 'B', 'C', 'D']
                    }
                }
            }"
            configuration="{
                model: {
                    name: {
                        default: 'Default Name',
                        maximumLength: 15,
                        minimumLength: 2,
                        nullable: false,
                        regularExpressionPattern: '[a-zA-Z]+'
                    },
                    message: {
                        maximumLength: 50,
                        minimumLength: 4,
                        nullable: false,
                        regularExpressionPattern: '[a-zA-Z0-9]+'
                    },
                    feelsGood: {
                        nullable: false,
                        type: 'boolean'
                    },
                    anotherName: {}
                }
            }"
            dynamic-configuration="{
                model: {
                    legalNotesChecked: {
                        nullable: false
                    }
                }
            }"
        >

            <circular-spinner size="'xlarge'"></circular-spinner>

            <div class="agile-form__status-message"></div>

            <hr
                class="agile-form__group"
                name="message-divider"
                show-if="stateMessage"
            />

            <div class="agile-form__group" name="report" show-if="submitted">
                Result:
                <pre>${tools.represent(getData())}</pre>
            </div>

            <hr
                class="agile-form__group"
                name="result-message-divider"
                show-if="submitted"
            />

            <generic-input
                declaration="Please fill in your type."
                description="Type"
                labels="{A: 'Label A', B: 'Label B', C: 'Label C'}"
                name="type"
            ></generic-input>
            <generic-input
                declaration="Please fill in your name."
                description="Name"
                name="name"
            ></generic-input>
            <generic-input
                declaration="Please provide a message."
                description="Message"
                editor="text"
                name="message"
                placeholder="Please type in a message..."
            ></generic-input>

            <generic-input
                description="How do you feel?"
                declaration="Do you feel good?"
                labels="{true: 'Yess!', false: 'Oh noo I am sad...'}"
                name="feelsGood"
                placeholder="Please select your feeling"
                type="boolean"
            ></generic-input>

            <requireable-checkbox
                name="legalNotesChecked" description="Check it!"
            ></requireable-checkbox>

            <button truncate>Truncate</button>
            <button clear>Clear</button>
            <button type="reset">Reset</button>
            <button type="submit">OK</button>

        </agile-form>
    </body>
<html>
<%_ /*
    region vim modline
    vim: set tabstop=4 shiftwidth=4 expandtab:
    vim: foldmethod=marker foldmarker=region,endregion:
    endregion
*/ _%>
